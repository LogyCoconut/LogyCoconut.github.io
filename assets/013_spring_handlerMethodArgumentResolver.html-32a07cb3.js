const e=JSON.parse('{"key":"v-a81323cc","path":"/post/013_spring_handlerMethodArgumentResolver.html","title":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定","lang":"zh-CN","frontmatter":{"title":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定","date":"2020-06-30T14:47:48.000Z","draft":false,"category":["关于技术"],"tag":["SpringMVC"],"description":"更优雅的将传入的信息转化成自定义的实体 SpringMVC数据绑定 先贴一段代码 ( 需要Lombok包 ) // User实体类 @Data @AllArgsConstructor public class User { String name; String password; } // UserController // http://localhost:8888/user/info?name=jack&amp;password=123 @RestController @RequestMapping(\\"user\\") public class UserController { @GetMapping(\\"info\\") public void getUser(User user) { System.out.println(user); } }","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/post/013_spring_handlerMethodArgumentResolver.html"}],["meta",{"property":"og:title","content":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定"}],["meta",{"property":"og:description","content":"更优雅的将传入的信息转化成自定义的实体 SpringMVC数据绑定 先贴一段代码 ( 需要Lombok包 ) // User实体类 @Data @AllArgsConstructor public class User { String name; String password; } // UserController // http://localhost:8888/user/info?name=jack&amp;password=123 @RestController @RequestMapping(\\"user\\") public class UserController { @GetMapping(\\"info\\") public void getUser(User user) { System.out.println(user); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-02T15:36:16.000Z"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2020-06-30T14:47:48.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-02T15:36:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC之HandlerMethodArgumentResolver实现数据绑定\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-30T14:47:48.000Z\\",\\"dateModified\\":\\"2022-12-02T15:36:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"SpringMVC数据绑定","slug":"springmvc数据绑定","link":"#springmvc数据绑定","children":[]},{"level":2,"title":"对方法参数处理","slug":"对方法参数处理","link":"#对方法参数处理","children":[{"level":3,"title":"实现HandlerMethodArgumentResolver接口对参数处理","slug":"实现handlermethodargumentresolver接口对参数处理","link":"#实现handlermethodargumentresolver接口对参数处理","children":[]},{"level":3,"title":"对带有特定注解的参数处理","slug":"对带有特定注解的参数处理","link":"#对带有特定注解的参数处理","children":[]},{"level":3,"title":"将解析器添加到WebConfig","slug":"将解析器添加到webconfig","link":"#将解析器添加到webconfig","children":[]}]}],"git":{"createdTime":1669995376000,"updatedTime":1669995376000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":1.46,"words":438},"filePathRelative":"_post/013_spring_handlerMethodArgumentResolver.md","localizedDate":"2020年6月30日","excerpt":"<blockquote>\\n<p>更优雅的将传入的信息转化成自定义的实体</p>\\n</blockquote>\\n<h2> SpringMVC数据绑定</h2>\\n<p>先贴一段代码 ( 需要<code>Lombok</code>包 )</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>// User实体类\\n@Data\\n@AllArgsConstructor\\npublic class User {\\n    String name;\\n    String password;\\n}\\n\\n// UserController\\n// http://localhost:8888/user/info?name=jack&amp;password=123\\n@RestController\\n@RequestMapping(\\"user\\")\\npublic class UserController {\\n\\n    @GetMapping(\\"info\\")\\n    public void getUser(User user) {\\n        System.out.println(user);\\n    }\\n\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
