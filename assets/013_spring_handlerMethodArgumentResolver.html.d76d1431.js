const e=JSON.parse('{"key":"v-78b054bd","path":"/toSortOut/013_spring_handlerMethodArgumentResolver.html","title":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定","lang":"zh-CN","frontmatter":{"title":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定","date":"2020-06-30T14:47:48.000Z","draft":false,"categories":["关于技术"],"tags":["SpringMVC"],"summary":"\\" 更优雅的将传入的信息转化成自定义的实体\\" SpringMVC数据绑定 先贴一段代码 ( 需要Lombok包 ) SpringMVC会自动将请求中的参数赋值给对象中的同名属性, 实现数据绑定 对方法参数处理 实现HandlerMethodArgumentResolver接口对参数处理 \\" 数据绑定很好用, 但是我们不可能每次请求都带上User的参数, 在日","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/toSortOut/013_spring_handlerMethodArgumentResolver.html"}],["meta",{"property":"og:title","content":"SpringMVC之HandlerMethodArgumentResolver实现数据绑定"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-08T13:51:25.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2020-06-30T14:47:48.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-08T13:51:25.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"SpringMVC数据绑定","slug":"springmvc数据绑定","link":"#springmvc数据绑定","children":[]},{"level":2,"title":"对方法参数处理","slug":"对方法参数处理","link":"#对方法参数处理","children":[{"level":3,"title":"实现HandlerMethodArgumentResolver接口对参数处理","slug":"实现handlermethodargumentresolver接口对参数处理","link":"#实现handlermethodargumentresolver接口对参数处理","children":[]},{"level":3,"title":"对带有特定注解的参数处理","slug":"对带有特定注解的参数处理","link":"#对带有特定注解的参数处理","children":[]},{"level":3,"title":"将解析器添加到WebConfig","slug":"将解析器添加到webconfig","link":"#将解析器添加到webconfig","children":[]}]}],"git":{"createdTime":1667915485000,"updatedTime":1667915485000,"contributors":[{"name":"logycoconut","email":"1425795337@qq.com","commits":1}]},"readingTime":{"minutes":1.46,"words":438},"filePathRelative":"toSortOut/013_spring_handlerMethodArgumentResolver.md","localizedDate":"2020年6月30日"}');export{e as data};
