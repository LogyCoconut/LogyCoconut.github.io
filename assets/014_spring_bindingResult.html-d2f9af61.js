const e=JSON.parse('{"key":"v-8c4671b2","path":"/post/014_spring_bindingResult.html","title":"SpringMVC的参数验证中BindingResult的使用","lang":"zh-CN","frontmatter":{"title":"SpringMVC的参数验证中BindingResult的使用","date":"2020-07-21T13:53:43.000Z","draft":false,"category":["关于技术"],"tag":["SpringMVC"],"description":"在不需要统一处理异常时使用 代码示例 创建实体类 @Data public class User { @NotNull(message = \\"用户名不能为空\\") private String name; @NotEmpty(message = \\"密码不能是空值\\") private String password; }","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/post/014_spring_bindingResult.html"}],["meta",{"property":"og:title","content":"SpringMVC的参数验证中BindingResult的使用"}],["meta",{"property":"og:description","content":"在不需要统一处理异常时使用 代码示例 创建实体类 @Data public class User { @NotNull(message = \\"用户名不能为空\\") private String name; @NotEmpty(message = \\"密码不能是空值\\") private String password; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-02T15:36:16.000Z"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2020-07-21T13:53:43.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-02T15:36:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC的参数验证中BindingResult的使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-21T13:53:43.000Z\\",\\"dateModified\\":\\"2022-12-02T15:36:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[{"level":3,"title":"创建实体类","slug":"创建实体类","link":"#创建实体类","children":[]},{"level":3,"title":"编写WEB层代码","slug":"编写web层代码","link":"#编写web层代码","children":[]}]},{"level":2,"title":"结果对比","slug":"结果对比","link":"#结果对比","children":[{"level":3,"title":"① 参数中有BindingResult","slug":"_1-参数中有bindingresult","link":"#_1-参数中有bindingresult","children":[]},{"level":3,"title":"② 参数中没有BindingResult","slug":"_2-参数中没有bindingresult","link":"#_2-参数中没有bindingresult","children":[]}]}],"git":{"createdTime":1669995376000,"updatedTime":1669995376000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":0.98,"words":293},"filePathRelative":"_post/014_spring_bindingResult.md","localizedDate":"2020年7月21日","excerpt":"<blockquote>\\n<p>在不需要统一处理异常时使用</p>\\n</blockquote>\\n<h2> 代码示例</h2>\\n<h3> 创建实体类</h3>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>@Data\\npublic class User {\\n    @NotNull(message = \\"用户名不能为空\\")\\n    private String name;\\n    @NotEmpty(message = \\"密码不能是空值\\")\\n    private String password;\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
