const e=JSON.parse('{"key":"v-307dc1cc","path":"/code/01_java/04_%E5%B9%B6%E5%8F%91/01_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","title":"常见问题","lang":"zh-CN","frontmatter":{"title":"常见问题","date":"2022-03-07T00:00:00.000Z","tag":["Java"],"description":"线程与进程的关系、区别与缺点 图解进程和线程的关系 下图是 Java 内存区域 从上图可以看出，一个进程中可以有多个线程，多个线程共享进程的堆和方法区资源，但是每个线程有自己的程序计数器、虚拟机栈、本地方法栈线程是进程划分后的更小运行单位，线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中中的线程极有可能会相互影响。线程执行开销小，但不利于资源的管理和保护；而进程刚好相反","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/code/01_java/04_%E5%B9%B6%E5%8F%91/01_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:title","content":"常见问题"}],["meta",{"property":"og:description","content":"线程与进程的关系、区别与缺点 图解进程和线程的关系 下图是 Java 内存区域 从上图可以看出，一个进程中可以有多个线程，多个线程共享进程的堆和方法区资源，但是每个线程有自己的程序计数器、虚拟机栈、本地方法栈线程是进程划分后的更小运行单位，线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中中的线程极有可能会相互影响。线程执行开销小，但不利于资源的管理和保护；而进程刚好相反"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-17T13:28:57.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-17T13:28:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-17T13:28:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":2,"title":"线程与进程的关系、区别与缺点","slug":"线程与进程的关系、区别与缺点","link":"#线程与进程的关系、区别与缺点","children":[{"level":3,"title":"图解进程和线程的关系","slug":"图解进程和线程的关系","link":"#图解进程和线程的关系","children":[]},{"level":3,"title":"为什么程序计数器是私有的","slug":"为什么程序计数器是私有的","link":"#为什么程序计数器是私有的","children":[]},{"level":3,"title":"虚拟机栈和本地方法栈为什么是私有的","slug":"虚拟机栈和本地方法栈为什么是私有的","link":"#虚拟机栈和本地方法栈为什么是私有的","children":[]},{"level":3,"title":"堆和方法区","slug":"堆和方法区","link":"#堆和方法区","children":[]}]},{"level":2,"title":"线程的生命周期和状态","slug":"线程的生命周期和状态","link":"#线程的生命周期和状态","children":[]},{"level":2,"title":"什么是上下文切换？","slug":"什么是上下文切换","link":"#什么是上下文切换","children":[]},{"level":2,"title":"什么是线程死锁？如何避免死锁？","slug":"什么是线程死锁-如何避免死锁","link":"#什么是线程死锁-如何避免死锁","children":[]},{"level":2,"title":"synchronized关键字是怎么使用的","slug":"synchronized关键字是怎么使用的","link":"#synchronized关键字是怎么使用的","children":[]},{"level":2,"title":"Java 内存模型（JMM）","slug":"java-内存模型-jmm","link":"#java-内存模型-jmm","children":[]},{"level":2,"title":"synchronized和volatile关键字的区别","slug":"synchronized和volatile关键字的区别","link":"#synchronized和volatile关键字的区别","children":[]},{"level":2,"title":"ThreadLocal 原理","slug":"threadlocal-原理","link":"#threadlocal-原理","children":[{"level":3,"title":"ThreadLocal的内存泄漏问题","slug":"threadlocal的内存泄漏问题","link":"#threadlocal的内存泄漏问题","children":[]}]},{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"为什么使用线程池","slug":"为什么使用线程池","link":"#为什么使用线程池","children":[]},{"level":3,"title":"Runnable 接口和 Callable 接口的区别","slug":"runnable-接口和-callable-接口的区别","link":"#runnable-接口和-callable-接口的区别","children":[]},{"level":3,"title":"执行 execute()和 submit()方法","slug":"执行-execute-和-submit-方法","link":"#执行-execute-和-submit-方法","children":[]},{"level":3,"title":"如何创建线程池","slug":"如何创建线程池","link":"#如何创建线程池","children":[]},{"level":3,"title":"线程池原理","slug":"线程池原理","link":"#线程池原理","children":[]}]},{"level":2,"title":"AQS及其原理","slug":"aqs及其原理","link":"#aqs及其原理","children":[]}],"git":{"createdTime":1692278937000,"updatedTime":1692278937000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":10.43,"words":3128},"filePathRelative":"code/01_java/04_并发/01_常见问题.md","localizedDate":"2022年3月7日","excerpt":"<h2> 线程与进程的关系、区别与缺点</h2>\\n<h3> 图解进程和线程的关系</h3>\\n<p>下图是 Java 内存区域</p>\\n<figure><img src=\\"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/Java 内存区域.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>从上图可以看出，一个进程中可以有多个线程，多个线程共享进程的堆和方法区资源，但是每个线程有自己的程序计数器、虚拟机栈、本地方法栈线程是进程划分后的更小运行单位，线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中中的线程极有可能会相互影响。线程执行开销小，但不利于资源的管理和保护；而进程刚好相反</p>","autoDesc":true}');export{e as data};
