const t=JSON.parse('{"key":"v-28905ebe","path":"/post/028_spring_cloud_notes_stream.html","title":"Spring Cloud 之 Spring Cloud Stream ","lang":"zh-CN","frontmatter":{"title":"Spring Cloud 之 Spring Cloud Stream ","date":"2021-01-16T06:40:00.000Z","draft":false,"category":["关于技术"],"tag":["SpringCloud"],"description":"Spring Cloud Stream 是 Spring Cloud 体系中的消息中间件组件，它集成了 kafka 和 rabbitMQ 它屏蔽掉了底层不同消息中间件之间的差异，降低了学习成本和维护成本 (就像我们用 ORM 框架来取代直接操作数据库一样) 快速上手 编写代码之前我们需要搭建一个 rabbitMQ 环境，这里不再累述 构建消息生产者 stream-producer 引入依赖 &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-stream-rabbit&lt;/artifactId&gt; &lt;/dependency&gt;","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/post/028_spring_cloud_notes_stream.html"}],["meta",{"property":"og:title","content":"Spring Cloud 之 Spring Cloud Stream "}],["meta",{"property":"og:description","content":"Spring Cloud Stream 是 Spring Cloud 体系中的消息中间件组件，它集成了 kafka 和 rabbitMQ 它屏蔽掉了底层不同消息中间件之间的差异，降低了学习成本和维护成本 (就像我们用 ORM 框架来取代直接操作数据库一样) 快速上手 编写代码之前我们需要搭建一个 rabbitMQ 环境，这里不再累述 构建消息生产者 stream-producer 引入依赖 &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-stream-rabbit&lt;/artifactId&gt; &lt;/dependency&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-02T15:36:16.000Z"}],["meta",{"property":"article:tag","content":"SpringCloud"}],["meta",{"property":"article:published_time","content":"2021-01-16T06:40:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-02T15:36:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Cloud 之 Spring Cloud Stream \\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-16T06:40:00.000Z\\",\\"dateModified\\":\\"2022-12-02T15:36:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[{"level":3,"title":"构建消息生产者 stream-producer","slug":"构建消息生产者-stream-producer","link":"#构建消息生产者-stream-producer","children":[]},{"level":3,"title":"构建消息消费者 stream-consumer","slug":"构建消息消费者-stream-consumer","link":"#构建消息消费者-stream-consumer","children":[]},{"level":3,"title":"测试服务可用性","slug":"测试服务可用性","link":"#测试服务可用性","children":[]}]},{"level":2,"title":"高级部分","slug":"高级部分","link":"#高级部分","children":[{"level":3,"title":"配置解析","slug":"配置解析","link":"#配置解析","children":[]},{"level":3,"title":"自定义消息通道","slug":"自定义消息通道","link":"#自定义消息通道","children":[]},{"level":3,"title":"消息分组","slug":"消息分组","link":"#消息分组","children":[]},{"level":3,"title":"消息回执","slug":"消息回执","link":"#消息回执","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]},{"level":2,"title":"相关源码地址","slug":"相关源码地址","link":"#相关源码地址","children":[]}],"git":{"createdTime":1669995376000,"updatedTime":1669995376000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":4.68,"words":1404},"filePathRelative":"_post/028_spring_cloud_notes_stream.md","localizedDate":"2021年1月16日","excerpt":"<blockquote>\\n<p>Spring Cloud Stream 是 Spring Cloud 体系中的消息中间件组件，它集成了 kafka 和 rabbitMQ</p>\\n<p>它屏蔽掉了底层不同消息中间件之间的差异，降低了学习成本和维护成本 (就像我们用 ORM 框架来取代直接操作数据库一样)</p>\\n</blockquote>\\n<h2> 快速上手</h2>\\n<p>编写代码之前我们需要搭建一个 rabbitMQ 环境，这里不再累述</p>\\n<h3> 构建消息生产者 stream-producer</h3>\\n<ol>\\n<li>引入依赖</li>\\n</ol>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>&lt;dependency&gt;\\n    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\\n    &lt;artifactId&gt;spring-cloud-starter-stream-rabbit&lt;/artifactId&gt;\\n&lt;/dependency&gt;\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
