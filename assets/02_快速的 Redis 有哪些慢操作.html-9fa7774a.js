const e=JSON.parse('{"key":"v-3d34f04e","path":"/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/02_%E5%BF%AB%E9%80%9F%E7%9A%84%20Redis%20%E6%9C%89%E5%93%AA%E4%BA%9B%E6%85%A2%E6%93%8D%E4%BD%9C.html","title":"02_快速的 Redis 有哪些慢操作","lang":"zh-CN","frontmatter":{"title":"02_快速的 Redis 有哪些慢操作","tag":["Redis"],"category":["Redis 核心技术与实战"],"description":"Redis 的快到底是快在哪里？ 一个重要的表现就是，它接收到一个键值对操作后，能以微秒级别的速度找到数据，并快速完成操作 数据库有这么多，为什么 Redis 有这么突出的表现？ 一方面，它是内存数据库，所有操作都在内存上完成，内存的访问速度本身就很快 另一方面，要归功于它的数据结构 因为键值对是按一定的数据结构来组织的，操作键值对最终就是对数据结构进行增删改查操作，所以高效的数据结构是 Redis 快速处理数据的基础","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/02_%E5%BF%AB%E9%80%9F%E7%9A%84%20Redis%20%E6%9C%89%E5%93%AA%E4%BA%9B%E6%85%A2%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:title","content":"02_快速的 Redis 有哪些慢操作"}],["meta",{"property":"og:description","content":"Redis 的快到底是快在哪里？ 一个重要的表现就是，它接收到一个键值对操作后，能以微秒级别的速度找到数据，并快速完成操作 数据库有这么多，为什么 Redis 有这么突出的表现？ 一方面，它是内存数据库，所有操作都在内存上完成，内存的访问速度本身就很快 另一方面，要归功于它的数据结构 因为键值对是按一定的数据结构来组织的，操作键值对最终就是对数据结构进行增删改查操作，所以高效的数据结构是 Redis 快速处理数据的基础"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-29T05:28:50.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2024-02-29T05:28:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02_快速的 Redis 有哪些慢操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-29T05:28:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"键和值用什么结构组织","slug":"键和值用什么结构组织","link":"#键和值用什么结构组织","children":[]},{"level":3,"title":"为什么哈希操作变慢了","slug":"为什么哈希操作变慢了","link":"#为什么哈希操作变慢了","children":[]},{"level":3,"title":"集合数据操作效率","slug":"集合数据操作效率","link":"#集合数据操作效率","children":[]},{"level":3,"title":"有哪些底层数据结构？","slug":"有哪些底层数据结构","link":"#有哪些底层数据结构","children":[]}],"git":{"createdTime":1709184530000,"updatedTime":1709184530000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":7.97,"words":2391},"filePathRelative":"01_Project/Redis/Redis 核心技术与实战 - 极客时间/02_快速的 Redis 有哪些慢操作.md","localizedDate":"2024年2月29日","excerpt":"<p><code>Redis</code> 的快到底是快在哪里？<br>\\n一个重要的表现就是，它接收到一个键值对操作后，能以微秒级别的速度找到数据，并快速完成操作</p>\\n<p>数据库有这么多，为什么 <code>Redis</code> 有这么突出的表现？</p>\\n<ul>\\n<li>一方面，它是内存数据库，所有操作都在内存上完成，内存的访问速度本身就很快</li>\\n<li>另一方面，要归功于它的数据结构<br>\\n因为键值对是按一定的数据结构来组织的，操作键值对最终就是对数据结构进行增删改查操作，所以高效的数据结构是 <code>Redis</code> 快速处理数据的基础</li>\\n</ul>","autoDesc":true}');export{e as data};
