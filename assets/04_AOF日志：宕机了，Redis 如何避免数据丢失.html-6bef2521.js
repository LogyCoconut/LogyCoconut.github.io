const e=JSON.parse('{"key":"v-48a5ecb4","path":"/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/04_AOF%E6%97%A5%E5%BF%97%EF%BC%9A%E5%AE%95%E6%9C%BA%E4%BA%86%EF%BC%8CRedis%20%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1.html","title":"04_AOF日志：宕机了，Redis 如何避免数据丢失","lang":"zh-CN","frontmatter":{"title":"04_AOF日志：宕机了，Redis 如何避免数据丢失","tag":["Redis"],"category":["Redis 核心技术与实战"],"description":"目前，Redis 的持久化主要有两大机制，即 AOF 日志（Append Only File） 和 RDB 快照 AOF 日志是如何实现的？ 说到日志，我们比较熟悉的是数据库的写前日志（WAL，Write Ahead Log），也就是说，在实际写数据前，先把修改的数据记到日志文件中，以便故障时进行恢复 不过，AOF 日志正好相反，它是写后日志，即 Redis 先执行命令，把数据写入内存，然后才记录日志 那么，为什么 AOF 要先执行命令再记日志呢？首先我们先来看看 AOF 里记录了什么内容 传统数据库的日志，例如 redo log（重做日志），记录的是修改后的数据，而 AOF 里面记录的是 Redis 收到的每一条命令，这些命令是以文本形式保存的","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/04_AOF%E6%97%A5%E5%BF%97%EF%BC%9A%E5%AE%95%E6%9C%BA%E4%BA%86%EF%BC%8CRedis%20%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1.html"}],["meta",{"property":"og:title","content":"04_AOF日志：宕机了，Redis 如何避免数据丢失"}],["meta",{"property":"og:description","content":"目前，Redis 的持久化主要有两大机制，即 AOF 日志（Append Only File） 和 RDB 快照 AOF 日志是如何实现的？ 说到日志，我们比较熟悉的是数据库的写前日志（WAL，Write Ahead Log），也就是说，在实际写数据前，先把修改的数据记到日志文件中，以便故障时进行恢复 不过，AOF 日志正好相反，它是写后日志，即 Redis 先执行命令，把数据写入内存，然后才记录日志 那么，为什么 AOF 要先执行命令再记日志呢？首先我们先来看看 AOF 里记录了什么内容 传统数据库的日志，例如 redo log（重做日志），记录的是修改后的数据，而 AOF 里面记录的是 Redis 收到的每一条命令，这些命令是以文本形式保存的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-29T05:28:50.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2024-02-29T05:28:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04_AOF日志：宕机了，Redis 如何避免数据丢失\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-29T05:28:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"AOF 日志是如何实现的？","slug":"aof-日志是如何实现的","link":"#aof-日志是如何实现的","children":[]},{"level":3,"title":"三种写回策略","slug":"三种写回策略","link":"#三种写回策略","children":[]},{"level":3,"title":"日志文件太大了怎么办？","slug":"日志文件太大了怎么办","link":"#日志文件太大了怎么办","children":[]},{"level":3,"title":"AOF 重写会阻塞吗？","slug":"aof-重写会阻塞吗","link":"#aof-重写会阻塞吗","children":[]}],"git":{"createdTime":1709184530000,"updatedTime":1709184530000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":6.98,"words":2093},"filePathRelative":"01_Project/Redis/Redis 核心技术与实战 - 极客时间/04_AOF日志：宕机了，Redis 如何避免数据丢失.md","localizedDate":"2024年2月29日","excerpt":"<p>目前，Redis 的持久化主要有两大机制，即 AOF 日志（Append Only File） 和 RDB 快照</p>\\n<h3> AOF 日志是如何实现的？</h3>\\n<p>说到日志，我们比较熟悉的是数据库的写前日志（WAL，Write Ahead Log），也就是说，在实际写数据前，先把修改的数据记到日志文件中，以便故障时进行恢复<br>\\n不过，AOF 日志正好相反，它是写后日志，即 Redis 先执行命令，把数据写入内存，然后才记录日志</p>\\n<p>那么，为什么 AOF 要先执行命令再记日志呢？首先我们先来看看 AOF 里记录了什么内容</p>\\n<p>传统数据库的日志，例如 redo log（重做日志），记录的是修改后的数据，而 AOF 里面记录的是 Redis 收到的每一条命令，这些命令是以文本形式保存的</p>","autoDesc":true}');export{e as data};
