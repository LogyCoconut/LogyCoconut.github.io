const e=JSON.parse('{"key":"v-7236405c","path":"/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/05_%E5%86%85%E5%AD%98%E5%BF%AB%E7%85%A7%EF%BC%9A%E5%AE%95%E6%9C%BA%E5%90%8E%EF%BC%8CRedis%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E6%81%A2%E5%A4%8D%EF%BC%9F.html","title":"05_内存快照：宕机后，Redis 如何实现快速恢复？","lang":"zh-CN","frontmatter":{"title":"05_内存快照：宕机后，Redis 如何实现快速恢复？","tag":["Redis"],"category":["Redis 核心技术与实战"],"description":"之前谈论过 Redis 避免数据丢失的 AOF 方法，这个方法的好处是，每次执行只需要记录操作命令，需要持久化的数据量不大 一般来说，只要采用的不是 always 持久化策略，就不会对性能造成太大影响 但是，也正因为记录的是操作命令，而不是实际的数据，所以，用 AOF 方法进行故障恢复的时候，需要逐一把操作日志都执行一遍。如果操作日志非常多，Redis 就会恢复的很慢很慢，影响到正常使用 这当然不是理想的结果，那么有没有既可以保证可靠性，还能在宕机时实现快速恢复的其他方法呢？ 这就是今天要一起学习的另一种持久化方法：内存快照 所谓内存快照，就是指内存中的数据在某一个时刻的状态记录 类似于照片，当你给朋友拍照时，一张照片就能把朋友一瞬间的形象完全记下来","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/05_%E5%86%85%E5%AD%98%E5%BF%AB%E7%85%A7%EF%BC%9A%E5%AE%95%E6%9C%BA%E5%90%8E%EF%BC%8CRedis%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E6%81%A2%E5%A4%8D%EF%BC%9F.html"}],["meta",{"property":"og:title","content":"05_内存快照：宕机后，Redis 如何实现快速恢复？"}],["meta",{"property":"og:description","content":"之前谈论过 Redis 避免数据丢失的 AOF 方法，这个方法的好处是，每次执行只需要记录操作命令，需要持久化的数据量不大 一般来说，只要采用的不是 always 持久化策略，就不会对性能造成太大影响 但是，也正因为记录的是操作命令，而不是实际的数据，所以，用 AOF 方法进行故障恢复的时候，需要逐一把操作日志都执行一遍。如果操作日志非常多，Redis 就会恢复的很慢很慢，影响到正常使用 这当然不是理想的结果，那么有没有既可以保证可靠性，还能在宕机时实现快速恢复的其他方法呢？ 这就是今天要一起学习的另一种持久化方法：内存快照 所谓内存快照，就是指内存中的数据在某一个时刻的状态记录 类似于照片，当你给朋友拍照时，一张照片就能把朋友一瞬间的形象完全记下来"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-29T15:10:21.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2024-02-29T15:10:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05_内存快照：宕机后，Redis 如何实现快速恢复？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-29T15:10:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"给那些内存数据做快照？","slug":"给那些内存数据做快照","link":"#给那些内存数据做快照","children":[]},{"level":3,"title":"快照时数据能修改吗？","slug":"快照时数据能修改吗","link":"#快照时数据能修改吗","children":[]},{"level":3,"title":"可以每秒做一次快照吗？","slug":"可以每秒做一次快照吗","link":"#可以每秒做一次快照吗","children":[]}],"git":{"createdTime":1709184530000,"updatedTime":1709219421000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":2}]},"readingTime":{"minutes":9.23,"words":2769},"filePathRelative":"01_Project/Redis/Redis 核心技术与实战 - 极客时间/05_内存快照：宕机后，Redis 如何实现快速恢复？.md","localizedDate":"2024年2月29日","excerpt":"<p>之前谈论过 Redis 避免数据丢失的 AOF 方法，这个方法的好处是，每次执行只需要记录操作命令，需要持久化的数据量不大<br>\\n一般来说，只要采用的不是 <code>always</code> 持久化策略，就不会对性能造成太大影响</p>\\n<p>但是，也正因为记录的是操作命令，而不是实际的数据，所以，用 AOF 方法进行故障恢复的时候，需要逐一把操作日志都执行一遍。如果操作日志非常多，Redis 就会恢复的很慢很慢，影响到正常使用<br>\\n这当然不是理想的结果，那么有没有既可以保证可靠性，还能在宕机时实现快速恢复的其他方法呢？</p>\\n<p>这就是今天要一起学习的另一种持久化方法：<strong>内存快照</strong><br>\\n所谓内存快照，就是指内存中的数据在某一个时刻的状态记录<br>\\n类似于照片，当你给朋友拍照时，一张照片就能把朋友一瞬间的形象完全记下来</p>","autoDesc":true}');export{e as data};
