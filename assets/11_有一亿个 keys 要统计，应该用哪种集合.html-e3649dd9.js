const e=JSON.parse('{"key":"v-5f51bd00","path":"/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/11_%E6%9C%89%E4%B8%80%E4%BA%BF%E4%B8%AA%20keys%20%E8%A6%81%E7%BB%9F%E8%AE%A1%EF%BC%8C%E5%BA%94%E8%AF%A5%E7%94%A8%E5%93%AA%E7%A7%8D%E9%9B%86%E5%90%88.html","title":"11_有一亿个 keys 要统计，应该用哪种集合","lang":"zh-CN","frontmatter":{"title":"11_有一亿个 keys 要统计，应该用哪种集合","tag":["Redis"],"category":["Redis 核心技术与实战"],"description":"在 Web 和移动应用的场景中，我们经常需要保存这样一种信息：一个 key 对应一个数据集合 手机 APP 中的每天的用户登陆信息：一天对应一系列用户 ID 或移动设备 ID 电商网站上商品的用户评论列表：一个商品对应一系列的评论 用户在手机 APP 上的签到打卡信息：一天对应一系列用户的签到记录 应用网站上的网页访问信息：一个网页对应一系列的访问点击 我们知道，Redis 集合类型的特点就是一个键对应一系列的数据，所以非常适合用来存取这些数据 但是，在这些场景中，除了记录信息，我们往往还需要对集合中的数据进行统计，例如：","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/01_Project/Redis/Redis%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98%20-%20%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/11_%E6%9C%89%E4%B8%80%E4%BA%BF%E4%B8%AA%20keys%20%E8%A6%81%E7%BB%9F%E8%AE%A1%EF%BC%8C%E5%BA%94%E8%AF%A5%E7%94%A8%E5%93%AA%E7%A7%8D%E9%9B%86%E5%90%88.html"}],["meta",{"property":"og:title","content":"11_有一亿个 keys 要统计，应该用哪种集合"}],["meta",{"property":"og:description","content":"在 Web 和移动应用的场景中，我们经常需要保存这样一种信息：一个 key 对应一个数据集合 手机 APP 中的每天的用户登陆信息：一天对应一系列用户 ID 或移动设备 ID 电商网站上商品的用户评论列表：一个商品对应一系列的评论 用户在手机 APP 上的签到打卡信息：一天对应一系列用户的签到记录 应用网站上的网页访问信息：一个网页对应一系列的访问点击 我们知道，Redis 集合类型的特点就是一个键对应一系列的数据，所以非常适合用来存取这些数据 但是，在这些场景中，除了记录信息，我们往往还需要对集合中的数据进行统计，例如："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-06T12:36:15.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2024-03-06T12:36:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11_有一亿个 keys 要统计，应该用哪种集合\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-06T12:36:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"聚合统计","slug":"聚合统计","link":"#聚合统计","children":[]},{"level":3,"title":"排序统计","slug":"排序统计","link":"#排序统计","children":[]},{"level":3,"title":"二值状态统计","slug":"二值状态统计","link":"#二值状态统计","children":[]},{"level":3,"title":"基数统计","slug":"基数统计","link":"#基数统计","children":[]}],"git":{"createdTime":1709219421000,"updatedTime":1709728575000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":3}]},"readingTime":{"minutes":13.78,"words":4135},"filePathRelative":"01_Project/Redis/Redis 核心技术与实战 - 极客时间/11_有一亿个 keys 要统计，应该用哪种集合.md","localizedDate":"2024年2月29日","excerpt":"<p>在 Web 和移动应用的场景中，我们经常需要保存这样一种信息：一个 key 对应一个数据集合</p>\\n<ul>\\n<li>手机 APP 中的每天的用户登陆信息：一天对应一系列用户 ID 或移动设备 ID</li>\\n<li>电商网站上商品的用户评论列表：一个商品对应一系列的评论</li>\\n<li>用户在手机 APP 上的签到打卡信息：一天对应一系列用户的签到记录</li>\\n<li>应用网站上的网页访问信息：一个网页对应一系列的访问点击</li>\\n</ul>\\n<p>我们知道，Redis 集合类型的特点就是一个键对应一系列的数据，所以非常适合用来存取这些数据<br>\\n但是，在这些场景中，除了记录信息，我们往往还需要对集合中的数据进行统计，例如：</p>","autoDesc":true}');export{e as data};
