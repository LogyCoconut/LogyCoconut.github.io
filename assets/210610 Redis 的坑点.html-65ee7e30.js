import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,a,b as e,d as o,f as l}from"./app-f41112f2.js";const s={},c=l(`<h2 id="lua脚本" tabindex="-1"><a class="header-anchor" href="#lua脚本" aria-hidden="true">#</a> Lua脚本</h2><h3 id="call-结果比较-redis-nil-类型-lua-boolean-false" tabindex="-1"><a class="header-anchor" href="#call-结果比较-redis-nil-类型-lua-boolean-false" aria-hidden="true">#</a> call 结果比较 <code>Redis Nil 类型 -&gt; Lua boolean false</code></h3><ul><li>先看一段代码</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 如果 test 有值，则返回1，否则返回0
127.0.0.1:6379 &gt; eval &quot;local a = redis.call(&#39;get&#39;, &#39;key1&#39;); if a == nil then return 0; else return 1; end&quot; 0\\
(integer) 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lua 脚本的逻辑很清晰，而且可以确保 <code>key1</code> 是没有值的</p><p>但是！为啥会返回 1 ？</p>`,6),u={href:"https://redis.io/docs/manual/programmability/lua-api/#resp2-to-lua-type-conversion",target:"_blank",rel:"noopener noreferrer"},p=l(`<p><code>Redis Nil bulk reply and Nil multi bulk reply -&gt; Lua false boolean type</code></p><p>也就是说，<strong>Redis 会将 <code>nil</code> 转换成 Lua 里 <code>boolean</code> 的 <code>false</code> 值</strong></p><ul><li>改变一下 Lua 脚本的判断条件</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379 &gt; eval &quot;local a = redis.call(&#39;get&#39;, &#39;key1&#39;); if a == false then return 0; else return 1; end&quot; 0\\
(integer) 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>经过调整之后，终于返回预期结果</p><p>​​<!-- +++++++++ 下面是引用式链接 +++++++++ --></p>`,6);function _(m,h){const n=i("ExternalLinkIcon");return r(),d("div",null,[c,a("p",null,[e("根据 "),a("a",u,[e("官方文档"),o(n)]),e(" 所示")]),p])}const f=t(s,[["render",_],["__file","210610 Redis 的坑点.html.vue"]]);export{f as default};
