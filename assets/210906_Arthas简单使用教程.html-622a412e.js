import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as o,a as e,b as a,d as n,f as l,e as c}from"./app-5e910552.js";const t={},p=l(`<blockquote><p>Java 应用诊断利器</p></blockquote><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>我们都知道， JVM 提供了 <strong>远程调试（Remote Debug）</strong> 的功能， IDEA 也很好地支持了这一特性</p><p>但是，在中小型公司中，测试环境往往只有一台机器（或容器）</p><p>那么，在多个需求并行开发测试的时候，功能将会合并到同一测试分支，然后进行应用部署</p><p>这时候，如果再使用远程 Debug 的方式来排查错误，会导致整个测试环境的线程都挂起，影响别人的测试</p><p>所以我们可以通过 <s>打 log 日志+ 重新部署的方式排查问题</s></p><p>或者，选择更优雅的 Debug 工具，<strong>Arthas</strong></p><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Arthas 通过神奇的字节码插装技术，在不修改应用代码的情况下，对业务问题进行诊断

同时提供相当完善的文档以及新手教程

这里仅仅展示我经常用的一些命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="watch-观察函数" tabindex="-1"><a class="header-anchor" href="#watch-观察函数" aria-hidden="true">#</a> <code>watch</code> 观察函数</h3><p>举个例子</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 观察 UserController 的所有函数, 返回值为 {入参、抛出异常}, 当第一个入参为0时打印, 默认展开2层</span>
<span class="token function">watch</span> com.example.demo.arthas.user.UserController * <span class="token string">&#39;{params, throwExp}&#39;</span> <span class="token string">&#39;params[0]==0&#39;</span> <span class="token parameter variable">-x</span> <span class="token number">2</span>

<span class="token number">1</span>. 第一个参数是类名，支持通配
<span class="token number">2</span>. 第二个参数是函数名，支持通配
<span class="token number">3</span>. 第三个参数是返回值表达式
<span class="token number">4</span>. 第四个参数是条件表达式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),h=e("p",null,[a("返回值表达式 （ "),e("code",null,"ognl"),a(" 表达式）")],-1),m={href:"https://arthas.aliyun.com/doc/advice-class.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://arthas.aliyun.com/doc/advice-class.html",target:"_blank",rel:"noopener noreferrer"},v=l("<ul><li>loader</li><li>clazz</li><li>method</li><li>target</li><li>params</li><li>returnObj</li><li>throwExp</li><li>isBefore</li><li>isThrow</li><li>isReturn</li></ul>",1),b=e("li",null,[e("p",null,"常用参数")],-1),_=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token parameter variable">-x</span> 表示输出结果的属性遍历深度， 默认为1，最大为4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="tt-时空隧道" tabindex="-1"><a class="header-anchor" href="#tt-时空隧道" aria-hidden="true">#</a> <code>tt</code> 时空隧道</h3><p><code>tt</code> 命令可以理解为 <code>watch</code> 命令的增强，它可以将一组方法的调用都记录下来，通过索引查看当时的调用情况</p><ul><li><p>查看调用信息 <code>tt -id INDEX</code></p></li><li><p>重做一次调用 <code>tt -i INDEX -p</code></p></li></ul><h3 id="cls-命令行清空" tabindex="-1"><a class="header-anchor" href="#cls-命令行清空" aria-hidden="true">#</a> <code>cls</code> 命令行清空</h3><h3 id="jad-反编译代码" tabindex="-1"><a class="header-anchor" href="#jad-反编译代码" aria-hidden="true">#</a> <code>jad</code> 反编译代码</h3><p>可以查看运行的代码是否是最新的代码</p><ul><li><p><code>jad --source-only {package}.{ClassName}</code> 只打印出反编译后的源代码</p></li><li><p><code>jad {package}.{ClassName}</code> 打印出反编译后的源代码以及ClassLoader、Location</p></li></ul><h3 id="热部署代码" tabindex="-1"><a class="header-anchor" href="#热部署代码" aria-hidden="true">#</a> 热部署代码</h3><p>适用于一些简单的代码改动，无需重新提交代码并发布</p><ol><li><p>反编译代码并输出到tmp目录</p><p><code>jad --source-only com.example.demo.arthas.user.UserController &gt; /tmp/UserController.java</code></p></li><li><p>通过 vim 修改 <code>/tmp/UserController.java</code> 文件</p></li><li><p>查询 <code>UserController</code> 的 <code>ClassLoader</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ sc <span class="token parameter variable">-d</span> *UserController <span class="token operator">|</span> <span class="token function">grep</span> classLoaderHash
 classLoaderHash   1be6f5c3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由此可知 <code>classLoaderHash</code> 为 1be6f5c3</p></li><li><p>使用mc(Memory Compiler)命令来编译，并且通过-c或者--classLoaderClass参数指定ClassLoader</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 指定 classLoaderClass</span>
<span class="token function">mc</span> <span class="token parameter variable">--classLoaderClass</span> org.springframework.boot.loader.LaunchedURLClassLoader /tmp/UserController.java <span class="token parameter variable">-d</span> /tmp
<span class="token comment"># 指定 classLoaderHash</span>
<span class="token function">mc</span> <span class="token parameter variable">-c</span> 1be6f5c3 /tmp/UserController.java <span class="token parameter variable">-d</span> /tmp

<span class="token comment"># -d 指定编译后的Class文件路径（Class存在全路径包名下）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新加载编译好的Class文件</p><p><code>redefine /tmp/com/example/demo/arthas/user/UserController.class</code></p></li></ol><h2 id="idea-插件" tabindex="-1"><a class="header-anchor" href="#idea-插件" aria-hidden="true">#</a> IDEA 插件</h2><p>arthas-idea 汪小哥</p><p>生成arthas命令的神器</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,15),g={href:"https://arthas.aliyun.com/doc/quick-start.html",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,[a("​​"),c(" +++++++++ 下面是引用式链接 +++++++++ ")],-1);function f(x,C){const s=i("ExternalLinkIcon");return d(),o("div",null,[p,e("ul",null,[e("li",null,[h,e("p",null,[a("具体含义 "),e("a",m,[n(s)]),e("a",u,[a("https://arthas.aliyun.com/doc/advice-class.html"),n(s)])]),v]),b]),_,e("p",null,[e("a",g,[a("Arthas 官方文档"),n(s)])]),k])}const U=r(t,[["render",f],["__file","210906_Arthas简单使用教程.html.vue"]]);export{U as default};
