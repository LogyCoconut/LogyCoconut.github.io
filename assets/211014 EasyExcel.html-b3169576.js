const n=JSON.parse('{"key":"v-80a3c4b6","path":"/code/09_tools/211014%20EasyExcel.html","title":"EasyExcel","lang":"zh-CN","frontmatter":{"title":"EasyExcel","date":"2021-10-14T00:00:00.000Z","tag":["EasyExcel"],"description":"💡 官方文档已经非常详细 基本用法代码示例（写入自定义列数） public void export(HttpServletResponse response) { ExcelWriter excelWriter = null; try { // URLEncoder.encode防止中文乱码 String fileName = URLEncoder.encode(getFileName(), \\"UTF-8\\"); // 设置响应头 response.setContentType(\\"application/vnd.ms-excel\\"); response.setCharacterEncoding(\\"utf-8\\"); response.setHeader(\\"Content-disposition\\", \\"attachment;filename=\\" + fileName + \\".xlsx\\"); // LongestMatchColumnWidthStyleStrategy 实现自动列宽 excelWriter = EasyExcelFactory.write(response.getOutputStream()) \\t\\t\\t\\t\\t\\t\\t\\t\\t.registerWriteHandler(new LongestMatchColumnWidthStyleStrategy()) \\t\\t\\t\\t\\t\\t\\t\\t\\t.build(); // 构建表头 List&lt;List&lt;String&gt;&gt; statHead = buildStatHead(); // 构建数据 List&lt;List&lt;Object&gt;&gt; statData = buildStatData(); // 写Excel WriteSheet sheet1 = EasyExcelFactory.writerSheet(sheetNo, sheetName).head(statHead).build(); excelWriter.write(statData, sheet1); } catch (IOException e) { log.error(\\"\\", e); } finally { if (excelWriter != null) { // 关闭流 excelWriter.finish(); } } }","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/code/09_tools/211014%20EasyExcel.html"}],["meta",{"property":"og:title","content":"EasyExcel"}],["meta",{"property":"og:description","content":"💡 官方文档已经非常详细 基本用法代码示例（写入自定义列数） public void export(HttpServletResponse response) { ExcelWriter excelWriter = null; try { // URLEncoder.encode防止中文乱码 String fileName = URLEncoder.encode(getFileName(), \\"UTF-8\\"); // 设置响应头 response.setContentType(\\"application/vnd.ms-excel\\"); response.setCharacterEncoding(\\"utf-8\\"); response.setHeader(\\"Content-disposition\\", \\"attachment;filename=\\" + fileName + \\".xlsx\\"); // LongestMatchColumnWidthStyleStrategy 实现自动列宽 excelWriter = EasyExcelFactory.write(response.getOutputStream()) \\t\\t\\t\\t\\t\\t\\t\\t\\t.registerWriteHandler(new LongestMatchColumnWidthStyleStrategy()) \\t\\t\\t\\t\\t\\t\\t\\t\\t.build(); // 构建表头 List&lt;List&lt;String&gt;&gt; statHead = buildStatHead(); // 构建数据 List&lt;List&lt;Object&gt;&gt; statData = buildStatData(); // 写Excel WriteSheet sheet1 = EasyExcelFactory.writerSheet(sheetNo, sheetName).head(statHead).build(); excelWriter.write(statData, sheet1); } catch (IOException e) { log.error(\\"\\", e); } finally { if (excelWriter != null) { // 关闭流 excelWriter.finish(); } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-17T13:28:57.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"EasyExcel"}],["meta",{"property":"article:published_time","content":"2021-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-17T13:28:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"EasyExcel\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-17T13:28:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"基本用法代码示例（写入自定义列数）","slug":"基本用法代码示例-写入自定义列数","link":"#基本用法代码示例-写入自定义列数","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1692278937000,"updatedTime":1692278937000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"code/09_tools/211014 EasyExcel.md","localizedDate":"2021年10月14日","excerpt":"<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code> 💡 官方文档已经非常详细\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><h3> 基本用法代码示例（写入自定义列数）</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">export</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpServletResponse</span> response<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">ExcelWriter</span> excelWriter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// URLEncoder.encode防止中文乱码</span>\\n            <span class=\\"token class-name\\">String</span> fileName <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">URLEncoder</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">encode</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getFileName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"UTF-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 设置响应头</span>\\n            response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setContentType</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"application/vnd.ms-excel\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setCharacterEncoding</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"utf-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setHeader</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Content-disposition\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"attachment;filename=\\"</span> <span class=\\"token operator\\">+</span> fileName <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\".xlsx\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">// LongestMatchColumnWidthStyleStrategy 实现自动列宽</span>\\n            excelWriter <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">EasyExcelFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">write</span><span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getOutputStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerWriteHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">LongestMatchColumnWidthStyleStrategy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">// 构建表头</span>\\n            <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">List</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> statHead <span class=\\"token operator\\">=</span> <span class=\\"token function\\">buildStatHead</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 构建数据</span>\\n            <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">List</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> statData <span class=\\"token operator\\">=</span> <span class=\\"token function\\">buildStatData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 写Excel</span>\\n            <span class=\\"token class-name\\">WriteSheet</span> sheet1 <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">EasyExcelFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">writerSheet</span><span class=\\"token punctuation\\">(</span>sheetNo<span class=\\"token punctuation\\">,</span> sheetName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">head</span><span class=\\"token punctuation\\">(</span>statHead<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            excelWriter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">write</span><span class=\\"token punctuation\\">(</span>statData<span class=\\"token punctuation\\">,</span> sheet1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IOException</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>excelWriter <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token comment\\">// 关闭流</span>\\n                excelWriter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">finish</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
