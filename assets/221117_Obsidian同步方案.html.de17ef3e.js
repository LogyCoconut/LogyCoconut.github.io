import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as r,a as e,b as a,d as n,e as i,r as c}from"./app.ae55ca10.js";const s={},l=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>目前采用 Obsidian Git 插件进行同步
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><ol><li>PC端能够编辑、阅读</li><li>移动端可以访问</li><li>同步方式便捷</li></ol><h2 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路" aria-hidden="true">#</a> 实现思路</h2><h3 id="一、-remotely-save-插件-放弃" tabindex="-1"><a class="header-anchor" href="#一、-remotely-save-插件-放弃" aria-hidden="true">#</a> 一、 <s>Remotely Save 插件（放弃）</s></h3><p>很方便的插件，但是不支持过滤指定文件夹功能（ps: 我没找到😢），只适合纯文档型的仓库</p><h3 id="二、webdav同步-不太方便-未实现" tabindex="-1"><a class="header-anchor" href="#二、webdav同步-不太方便-未实现" aria-hidden="true">#</a> 二、<s>webdav同步（不太方便，未实现）</s></h3>`,7),h={href:"https://www.jianguoyun.com",target:"_blank",rel:"noopener noreferrer"},_=i('<ol><li><p>通过 <a href="%3Chttps://gitee.com/mirrors/easywebdav%3E">easywebdav</a> 库上传/覆盖文件</p></li><li><p>每一次 <code>commit</code> 时读取涉及到文件列表，只对修改文件做上传操作，减少 <code>webdav</code> 的交互请求（坚果云对上传频率有限制）</p></li><li><p>移动端 <code>Obsidian</code> APP，安装 <code>Remotely Save</code> 插件，并配置好坚果云的 <code>webdav</code> 地址进行同步</p></li></ol><h3 id="三、git仓库-目前使用的是这种" tabindex="-1"><a class="header-anchor" href="#三、git仓库-目前使用的是这种" aria-hidden="true">#</a> 三、Git仓库（目前使用的是这种）</h3><ol><li><p>安装 <code>Obsidian Git</code> 插件，将 Obsidian 仓库作为 Git 仓库管理</p></li><li><p>配合 <code>Github Actions</code> 每次提交时部署到 <code>Github Pages</code> (之后可能会同步 <code>Gitee Pages</code> )</p></li></ol>',3);function b(p,m){const d=c("ExternalLinkIcon");return t(),r("div",null,[l,e("blockquote",null,[e("p",null,[a("通过 Python 以及"),e("a",h,[a("坚果云"),n(d)]),a("的免费webdav服务实现")])]),_])}const f=o(s,[["render",b],["__file","221117_Obsidian同步方案.html.vue"]]);export{f as default};
