const t=JSON.parse('{"key":"v-823604ca","path":"/02_program/04_framework/Spring/AOP%20%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%20@Aspect%20%E6%B3%A8%E8%A7%A3.html","title":"AOP 面向切面 @Aspect 注解","lang":"zh-CN","frontmatter":{"title":"AOP 面向切面 @Aspect 注解","tag":["Spring","AOP","Aspect"],"index":false,"description":"@Pointcut 切面表达式的几种写法 只列我使用多的 通配符表达式 execution @AfterReturning(pointcut=\\"execution(* co.logycoconut.java.cheat.web.*.*(..))\\", returning = \\"result\\")","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/02_program/04_framework/Spring/AOP%20%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%20@Aspect%20%E6%B3%A8%E8%A7%A3.html"}],["meta",{"property":"og:title","content":"AOP 面向切面 @Aspect 注解"}],["meta",{"property":"og:description","content":"@Pointcut 切面表达式的几种写法 只列我使用多的 通配符表达式 execution @AfterReturning(pointcut=\\"execution(* co.logycoconut.java.cheat.web.*.*(..))\\", returning = \\"result\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-08T12:41:35.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"AOP"}],["meta",{"property":"article:tag","content":"Aspect"}],["meta",{"property":"article:modified_time","content":"2023-08-08T12:41:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AOP 面向切面 @Aspect 注解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-08T12:41:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"@Pointcut 切面表达式的几种写法","slug":"pointcut-切面表达式的几种写法","link":"#pointcut-切面表达式的几种写法","children":[]},{"level":3,"title":"切面表达式的参数匹配","slug":"切面表达式的参数匹配","link":"#切面表达式的参数匹配","children":[]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1691077016000,"updatedTime":1691498495000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":2}]},"readingTime":{"minutes":0.62,"words":187},"filePathRelative":"02_program/04_framework/Spring/AOP 面向切面 @Aspect 注解.md","localizedDate":"2023年8月3日","excerpt":"<h3> @Pointcut 切面表达式的几种写法</h3>\\n<blockquote>\\n<p>只列我使用多的</p>\\n</blockquote>\\n<h4> 通配符表达式</h4>\\n<h4> execution</h4>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@AfterReturning</span><span class=\\"token punctuation\\">(</span>pointcut<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"execution(* co.logycoconut.java.cheat.web.*.*(..))\\"</span><span class=\\"token punctuation\\">,</span> returning <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"result\\"</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
