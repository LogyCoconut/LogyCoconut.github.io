const t=JSON.parse('{"key":"v-b3814b78","path":"/00_inbox/MySQL/MySQL%20%E4%B8%AD%E7%9A%84%E6%9D%BE%E6%95%A3%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A7%E5%87%91%E7%B4%A2%E5%BC%95.html","title":"MySQL 中的松散索引和紧凑索引","lang":"zh-CN","frontmatter":{"title":"MySQL 中的松散索引和紧凑索引","date":"2023-03-06T00:00:00.000Z","tag":["MySQL"],"description":"松散索引 根据官方文档的描述，当语句满足索引\\"最左原则\\"时就可以用到松散索引 在 explain 的 Extra 字段中出现了 using index for group-by 就代表了使用了松散索引 数据都是有序的，可以不进行排序直接 distinct，然后过滤其他字段 例如 SELECT c1, c2 FROM t1 WHERE c3 = const GROUP BY c1, c2 其中，索引为 c1 c2 c3 的联合索引 那我们在根据 c1 c2 的规则分组时，根据联合索引，我们有 c 1 c 2 的索引树","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/00_inbox/MySQL/MySQL%20%E4%B8%AD%E7%9A%84%E6%9D%BE%E6%95%A3%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A7%E5%87%91%E7%B4%A2%E5%BC%95.html"}],["meta",{"property":"og:title","content":"MySQL 中的松散索引和紧凑索引"}],["meta",{"property":"og:description","content":"松散索引 根据官方文档的描述，当语句满足索引\\"最左原则\\"时就可以用到松散索引 在 explain 的 Extra 字段中出现了 using index for group-by 就代表了使用了松散索引 数据都是有序的，可以不进行排序直接 distinct，然后过滤其他字段 例如 SELECT c1, c2 FROM t1 WHERE c3 = const GROUP BY c1, c2 其中，索引为 c1 c2 c3 的联合索引 那我们在根据 c1 c2 的规则分组时，根据联合索引，我们有 c 1 c 2 的索引树"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-12T02:24:25.000Z"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-12T02:24:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 中的松散索引和紧凑索引\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-12T02:24:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"松散索引","slug":"松散索引","link":"#松散索引","children":[]},{"level":3,"title":"紧凑索引","slug":"紧凑索引","link":"#紧凑索引","children":[]}],"git":{"createdTime":1678587865000,"updatedTime":1678587865000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"00_inbox/MySQL/MySQL 中的松散索引和紧凑索引.md","localizedDate":"2023年3月6日","excerpt":"<h3> 松散索引</h3>\\n<p>根据官方文档的描述，当语句满足索引\\"最左原则\\"时就可以用到松散索引</p>\\n<p>在 explain 的 Extra 字段中出现了 using index for group-by 就代表了使用了松散索引</p>\\n<p>数据都是有序的，可以不进行排序直接 distinct，然后过滤其他字段</p>\\n<p><strong>例如</strong>\\n<code>SELECT c1, c2 FROM t1 WHERE c3 = const GROUP BY c1, c2</code>\\n其中，索引为 <code>c1 c2 c3</code> 的联合索引\\n那我们在根据 c1 c2 的规则分组时，根据联合索引，我们有 c 1 c 2 的索引树</p>","autoDesc":true}');export{t as data};
