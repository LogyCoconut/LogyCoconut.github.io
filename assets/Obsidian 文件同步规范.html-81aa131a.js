import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as n,c as r,a as e,b as i,d as s,f as a}from"./app-d43a649e.js";const c={},_=e("h1",{id:"obsidian-文件同步规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#obsidian-文件同步规范","aria-hidden":"true"},"#"),i(" Obsidian 文件同步规范")],-1),d=e("p",null,[i("这篇文章的初衷非常简单"),e("br"),i(" 在长时间的 Obsidian 使用过程中（或者说知识库构建过程中），Git 在其中只是扮演了文件同步的角色"),e("br"),i(" 但是 Git 本身是一个非常优秀的版本控制工具"),e("br"),i(" 那么，是否需要以一种规范的方式来管理我的文档？就像管理代码一样？")],-1),u=e("p",null,"答案是肯定的，规范使用 Git 能够让提交记录更清晰，清楚地看到每一次提交做出的改变",-1),h={href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/",target:"_blank",rel:"noopener noreferrer"},f=e("br",null,null,-1),m=e("em",null,[e("strong",null,"Angular 规范")],-1),b=e("br",null,null,-1),g=a("<ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><p><strong>举个例子</strong></p><ul><li>feat：新笔记</li><li>fix: 对笔记内容进行比较大的修改</li><li>refactor：对笔记内容进行修饰</li><li>style：对笔记格式进行修改</li><li>chore：Obsidian 的插件、主题更新</li></ul>",3);function p(x,O){const t=o("ExternalLinkIcon");return n(),r("div",null,[_,d,u,e("p",null,[i("这里可以参考一份 Git 规范，"),e("em",null,[e("strong",null,[e("a",h,[i("AngularJS Git Commit Message Conventions"),s(t)])])]),f,m,i(" 将一次 Commit 信息分为 Header、Body、Footer 三部分"),b,i(" 对于文档管理来说，只使用 Header 部分就足以表明本次改动的内容了")]),g])}const N=l(c,[["render",p],["__file","Obsidian 文件同步规范.html.vue"]]);export{N as default};
