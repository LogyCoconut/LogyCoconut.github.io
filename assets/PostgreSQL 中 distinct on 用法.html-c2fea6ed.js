const e=JSON.parse('{"key":"v-0a7121a8","path":"/tech/issure/postgresql/PostgreSQL%20%E4%B8%AD%20distinct%20on%20%E7%94%A8%E6%B3%95.html","title":"PostgreSQL 中 distinct on 用法","lang":"zh-CN","frontmatter":{"title":"PostgreSQL 中 distinct on 用法","tag":["PostgreSQL"],"description":"背景 根据某列的数据进行去重之后的查询 distinct on 用法 可以简单的理解成 group by 之后然后取分组第一行? 准备 SQL create table class_teacher_info ( id serial not null primary key, class_id int not null, teacher_id int not null ); insert into class_teacher_info (class_id, teacher_id) values (1, 1); insert into class_teacher_info (class_id, teacher_id) values (1, 2); insert into class_teacher_info (class_id, teacher_id) values (1, 3); insert into class_teacher_info (class_id, teacher_id) values (1, 4); insert into class_teacher_info (class_id, teacher_id) values (1, 5); insert into class_teacher_info (class_id, teacher_id) values (2, 6); insert into class_teacher_info (class_id, teacher_id) values (2, 7); insert into class_teacher_info (class_id, teacher_id) values (2, 8); insert into class_teacher_info (class_id, teacher_id) values (2, 9); insert into class_teacher_info (class_id, teacher_id) values (2, 10);","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/tech/issure/postgresql/PostgreSQL%20%E4%B8%AD%20distinct%20on%20%E7%94%A8%E6%B3%95.html"}],["meta",{"property":"og:title","content":"PostgreSQL 中 distinct on 用法"}],["meta",{"property":"og:description","content":"背景 根据某列的数据进行去重之后的查询 distinct on 用法 可以简单的理解成 group by 之后然后取分组第一行? 准备 SQL create table class_teacher_info ( id serial not null primary key, class_id int not null, teacher_id int not null ); insert into class_teacher_info (class_id, teacher_id) values (1, 1); insert into class_teacher_info (class_id, teacher_id) values (1, 2); insert into class_teacher_info (class_id, teacher_id) values (1, 3); insert into class_teacher_info (class_id, teacher_id) values (1, 4); insert into class_teacher_info (class_id, teacher_id) values (1, 5); insert into class_teacher_info (class_id, teacher_id) values (2, 6); insert into class_teacher_info (class_id, teacher_id) values (2, 7); insert into class_teacher_info (class_id, teacher_id) values (2, 8); insert into class_teacher_info (class_id, teacher_id) values (2, 9); insert into class_teacher_info (class_id, teacher_id) values (2, 10);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-12T15:43:06.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"PostgreSQL"}],["meta",{"property":"article:modified_time","content":"2023-11-12T15:43:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PostgreSQL 中 distinct on 用法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-12T15:43:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":3,"title":"distinct on 用法","slug":"distinct-on-用法","link":"#distinct-on-用法","children":[]}],"git":{"createdTime":1699803786000,"updatedTime":1699803786000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":0.91,"words":274},"filePathRelative":"tech/issure/postgresql/PostgreSQL 中 distinct on 用法.md","localizedDate":"2023年11月12日","excerpt":"<h3> 背景</h3>\\n<p>根据某列的数据进行去重之后的查询</p>\\n<h3> distinct on 用法</h3>\\n<p>可以简单的理解成 <code>group by</code> 之后然后取分组第一行?</p>\\n<h4> 准备 SQL</h4>\\n<div class=\\"language-SQL line-numbers-mode\\" data-ext=\\"SQL\\"><pre class=\\"language-SQL\\"><code>create table class_teacher_info  \\n(  \\n    id serial not null primary key,  \\n    class_id int not null,  \\n    teacher_id int not null  \\n);  \\n  \\ninsert into class_teacher_info (class_id, teacher_id) values (1, 1);  \\ninsert into class_teacher_info (class_id, teacher_id) values (1, 2);  \\ninsert into class_teacher_info (class_id, teacher_id) values (1, 3);  \\ninsert into class_teacher_info (class_id, teacher_id) values (1, 4);  \\ninsert into class_teacher_info (class_id, teacher_id) values (1, 5);  \\ninsert into class_teacher_info (class_id, teacher_id) values (2, 6);  \\ninsert into class_teacher_info (class_id, teacher_id) values (2, 7);  \\ninsert into class_teacher_info (class_id, teacher_id) values (2, 8);  \\ninsert into class_teacher_info (class_id, teacher_id) values (2, 9);  \\ninsert into class_teacher_info (class_id, teacher_id) values (2, 10);\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
