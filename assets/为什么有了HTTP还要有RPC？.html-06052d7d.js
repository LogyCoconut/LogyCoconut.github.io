const e=JSON.parse('{"key":"v-b3774b16","path":"/03_Resource/staged/SeniorDevelopment/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%86HTTP%E8%BF%98%E8%A6%81%E6%9C%89RPC%EF%BC%9F.html","title":"to be perfected","lang":"zh-CN","frontmatter":{"title":"to be perfected","index":false,"date":"2023-03-16T00:00:00.000Z","tag":["RPC"],"description":"写在前面 HTTP（Hyper Text Transfer Protocol ） 是协议 RPC （Remote Procedure Call）是一种规范 两者并不能放在一起比较 HTTP、TCP、UDP 或者厂家自家定的协议都能实现 RPC 一次 HTTP 请求实际上就是一次 RPC 调用 TCP 演变 TCP 的特点 面向连接 可靠 基于字节流 字节流可以理解为一个双向的通道里流淌的数据，这个数据其实就是常说的二进制数据，简单来说就是一大堆 01 串","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/03_Resource/staged/SeniorDevelopment/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%86HTTP%E8%BF%98%E8%A6%81%E6%9C%89RPC%EF%BC%9F.html"}],["meta",{"property":"og:title","content":"to be perfected"}],["meta",{"property":"og:description","content":"写在前面 HTTP（Hyper Text Transfer Protocol ） 是协议 RPC （Remote Procedure Call）是一种规范 两者并不能放在一起比较 HTTP、TCP、UDP 或者厂家自家定的协议都能实现 RPC 一次 HTTP 请求实际上就是一次 RPC 调用 TCP 演变 TCP 的特点 面向连接 可靠 基于字节流 字节流可以理解为一个双向的通道里流淌的数据，这个数据其实就是常说的二进制数据，简单来说就是一大堆 01 串"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-10T12:09:39.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"RPC"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-10T12:09:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"to be perfected\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-10T12:09:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":2,"title":"写在前面","slug":"写在前面","link":"#写在前面","children":[]},{"level":2,"title":"TCP 演变","slug":"tcp-演变","link":"#tcp-演变","children":[{"level":3,"title":"TCP 的特点","slug":"tcp-的特点","link":"#tcp-的特点","children":[]},{"level":3,"title":"加入自定义规则","slug":"加入自定义规则","link":"#加入自定义规则","children":[]}]},{"level":2,"title":"有 HTTP 为什么还要有 RPC","slug":"有-http-为什么还要有-rpc","link":"#有-http-为什么还要有-rpc","children":[]},{"level":2,"title":"HTTP 和 RPC 的区别","slug":"http-和-rpc-的区别","link":"#http-和-rpc-的区别","children":[]}],"git":{"createdTime":1702210179000,"updatedTime":1702210179000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":2.07,"words":621},"filePathRelative":"03_Resource/staged/SeniorDevelopment/为什么有了HTTP还要有RPC？.md","localizedDate":"2023年3月16日","excerpt":"<h2> 写在前面</h2>\\n<p>HTTP（Hyper Text Transfer Protocol ） 是协议</p>\\n<p>RPC （Remote Procedure Call）是一种规范</p>\\n<p><strong>两者并不能放在一起比较</strong></p>\\n<p>HTTP、TCP、UDP 或者厂家自家定的协议都能实现 RPC</p>\\n<p>一次 HTTP 请求实际上就是一次 RPC 调用</p>\\n<h2> TCP 演变</h2>\\n<h3> TCP 的特点</h3>\\n<ul>\\n<li>面向连接</li>\\n<li>可靠</li>\\n<li>基于字节流</li>\\n</ul>\\n<p>字节流可以理解为一个双向的通道里流淌的数据，这个数据其实就是常说的二进制数据，简单来说就是一大堆 01 串</p>","autoDesc":true}');export{e as data};
