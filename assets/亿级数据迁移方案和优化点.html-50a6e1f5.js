const t=JSON.parse('{"key":"v-84407be6","path":"/00_Inbox/%E4%BA%BF%E7%BA%A7%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88%E5%92%8C%E4%BC%98%E5%8C%96%E7%82%B9.html","title":"亿级数据迁移方案和优化点","lang":"zh-CN","frontmatter":{"title":"亿级数据迁移方案和优化点","tag":[],"description":"亿级数据迁移方案和优化点 异构库的不停机迁移方案 大型电商网站，用户对店铺的关注体系数据 单项数据差不多有 8 亿多条 编写双写代码 凡是不停机迁移，一定要做双写 为什么要双写？ 在迁移过程中，会有源源不断的新数据产生 并且在整个读写逻辑迁移到新系统情况下，如果不双写的话，一旦某个用户已经迁移完毕了，后期这个用户又读写了，那么在新系统就会丢失数据 在写新系统前，需要判断用户是否已经迁移完毕了 如果迁移完毕了，再进行双写 编写路由代码 动态的去控制整个读写流程 到底是读新系统还是老系统","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/00_Inbox/%E4%BA%BF%E7%BA%A7%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88%E5%92%8C%E4%BC%98%E5%8C%96%E7%82%B9.html"}],["meta",{"property":"og:title","content":"亿级数据迁移方案和优化点"}],["meta",{"property":"og:description","content":"亿级数据迁移方案和优化点 异构库的不停机迁移方案 大型电商网站，用户对店铺的关注体系数据 单项数据差不多有 8 亿多条 编写双写代码 凡是不停机迁移，一定要做双写 为什么要双写？ 在迁移过程中，会有源源不断的新数据产生 并且在整个读写逻辑迁移到新系统情况下，如果不双写的话，一旦某个用户已经迁移完毕了，后期这个用户又读写了，那么在新系统就会丢失数据 在写新系统前，需要判断用户是否已经迁移完毕了 如果迁移完毕了，再进行双写 编写路由代码 动态的去控制整个读写流程 到底是读新系统还是老系统"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-13T15:42:12.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:modified_time","content":"2024-09-13T15:42:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"亿级数据迁移方案和优化点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-13T15:42:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[],"git":{"createdTime":1726242132000,"updatedTime":1726242132000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":0.86,"words":258},"filePathRelative":"00_Inbox/亿级数据迁移方案和优化点.md","localizedDate":"2024年9月13日","excerpt":"<h1> 亿级数据迁移方案和优化点</h1>\\n<p>异构库的不停机迁移方案</p>\\n<p>大型电商网站，用户对店铺的关注体系数据<br>\\n单项数据差不多有 8 亿多条</p>\\n<ul>\\n<li>编写双写代码<br>\\n凡是不停机迁移，一定要做双写<br>\\n为什么要双写？<br>\\n在迁移过程中，会有源源不断的新数据产生<br>\\n并且在整个读写逻辑迁移到新系统情况下，如果不双写的话，一旦某个用户已经迁移完毕了，后期这个用户又读写了，那么在新系统就会丢失数据</li>\\n</ul>\\n<p>在写新系统前，需要判断用户是否已经迁移完毕了<br>\\n如果迁移完毕了，再进行双写</p>\\n<ul>\\n<li>编写路由代码<br>\\n动态的去控制整个读写流程<br>\\n到底是读新系统还是老系统</li>\\n</ul>","autoDesc":true}');export{t as data};
