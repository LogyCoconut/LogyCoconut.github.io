import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{o as _,c as e,f as t}from"./app-19bdab2f.js";const l={},a=t('<h1 id="亿级数据迁移方案和优化点" tabindex="-1"><a class="header-anchor" href="#亿级数据迁移方案和优化点" aria-hidden="true">#</a> 亿级数据迁移方案和优化点</h1><p>异构库的不停机迁移方案</p><p>大型电商网站，用户对店铺的关注体系数据<br> 单项数据差不多有 8 亿多条</p><ul><li>编写双写代码<br> 凡是不停机迁移，一定要做双写<br> 为什么要双写？<br> 在迁移过程中，会有源源不断的新数据产生<br> 并且在整个读写逻辑迁移到新系统情况下，如果不双写的话，一旦某个用户已经迁移完毕了，后期这个用户又读写了，那么在新系统就会丢失数据</li></ul><p>在写新系统前，需要判断用户是否已经迁移完毕了<br> 如果迁移完毕了，再进行双写</p><ul><li>编写路由代码<br> 动态的去控制整个读写流程<br> 到底是读新系统还是老系统</li></ul><p>一般是配置在配置中心，阿波罗？Nacos？</p><ul><li>编写迁移代码<br> 整套系统，有</li></ul>',8),c=[a];function o(i,s){return _(),e("div",null,c)}const d=r(l,[["render",o],["__file","亿级数据迁移方案和优化点.html.vue"]]);export{d as default};
