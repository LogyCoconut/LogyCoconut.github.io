import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as p,a,b as n,d as o,f as i}from"./app-d082d9eb.js";const l={},r={href:"https://www.bilibili.com/video/BV1RY4y1v7mN",target:"_blank",rel:"noopener noreferrer"},d=i(`<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p><code>SPI</code> 全称 <code>Service Provider Interface</code></p><p>由三个组件构成</p><ul><li>Service</li><li>Service Provider</li><li>ServiceLoader</li></ul><p>ServiceLoader（服务发现&amp;加载） --&gt; 加载 Service Provider</p><h3 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h3><p><code>JDBC</code>（<code>Java DataBase Connectivity</code>）</p><p>一开始我们是这么使用数据库驱动的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span>

<span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;oracle.jdbc.driver.OracleDriver&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那能不能直接把这些写在配置文件中呢？那就不用修改代码了</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">app.yaml</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>似乎还是有点麻烦，因为还得记住这些驱动的名字<br> 能不能让驱动提供方提供配置文件（比方说将其放在 <code>Jar</code> 包中），我们约定好方式统一去一个地方加载这些配置呢？</p><p>呐，这就是 <code>SPI</code> 啦</p><h3 id="java-spi-的三大规范要素" tabindex="-1"><a class="header-anchor" href="#java-spi-的三大规范要素" aria-hidden="true">#</a> Java SPI 的三大规范要素</h3><h4 id="规范的配置文件" tabindex="-1"><a class="header-anchor" href="#规范的配置文件" aria-hidden="true">#</a> 规范的配置文件</h4><ul><li><p>文件路径<br> 必须在 <code>Jar</code> 包中的 <code>META-INF/services</code> 目录下</p></li><li><p>文件名称<br><code>Service</code> 接口的全限定名</p></li><li><p>文件内容<br><code>Service</code> 实现类（即 <code>Service Provider</code>）的全限定名<br> 如果有多个实现类，那么每一个实现类在文件中单独占据一行</p></li></ul><h4 id="service-provider-类必须有无参的构造方法" tabindex="-1"><a class="header-anchor" href="#service-provider-类必须有无参的构造方法" aria-hidden="true">#</a> <code>Service Provider</code> 类必须有无参的构造方法</h4><p>因为需要通过反射技术实例化它时，是不带参数的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="保证能加载到配置文件和-service-provider-类" tabindex="-1"><a class="header-anchor" href="#保证能加载到配置文件和-service-provider-类" aria-hidden="true">#</a> 保证能加载到配置文件和 Service Provider 类</h4><ul><li>将 <code>Service Provider</code> 的 <code>Jar</code> 包放到 <code>classpath</code> 中（常用）</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-spi-与-springboot-自动配置" tabindex="-1"><a class="header-anchor" href="#java-spi-与-springboot-自动配置" aria-hidden="true">#</a> Java SPI 与 SpringBoot 自动配置</h3>`,23);function u(v,k){const s=t("ExternalLinkIcon");return c(),p("div",null,[a("blockquote",null,[a("p",null,[n("【10 分钟让你彻底明白 Java SPI，附实例代码演示】 "),a("a",r,[n("https://www.bilibili.com/video/BV1RY4y1v7mN"),o(s)])])]),d])}const h=e(l,[["render",u],["__file","什么是 Java SPI.html.vue"]]);export{h as default};
