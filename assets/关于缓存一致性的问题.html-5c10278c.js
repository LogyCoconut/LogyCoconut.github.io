const e=JSON.parse('{"key":"v-54cd5766","path":"/01_Project/Interview/%E7%BC%93%E5%AD%98/%E5%85%B3%E4%BA%8E%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98.html","title":"关于缓存一致性的问题","lang":"zh-CN","frontmatter":{"title":"关于缓存一致性的问题","tag":["缓存","Cache"],"description":"缓存一致性问题往往发生在 MySQL 和 Redis 中 在数据变更过程中，因为并发、系统故障等问题导致数据、缓存更新不一致 对于缓存的更新，目前主要有两种策略 缓存更新策略 超时剔除策略 适用于低一致性需求，很少发生变更的数据 比方说将数据存在 Redis 中，并设置 ttl 读请求到来时发现数据过期后，重新去 MySQL 中查询并塞入缓存","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/01_Project/Interview/%E7%BC%93%E5%AD%98/%E5%85%B3%E4%BA%8E%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:title","content":"关于缓存一致性的问题"}],["meta",{"property":"og:description","content":"缓存一致性问题往往发生在 MySQL 和 Redis 中 在数据变更过程中，因为并发、系统故障等问题导致数据、缓存更新不一致 对于缓存的更新，目前主要有两种策略 缓存更新策略 超时剔除策略 适用于低一致性需求，很少发生变更的数据 比方说将数据存在 Redis 中，并设置 ttl 读请求到来时发现数据过期后，重新去 MySQL 中查询并塞入缓存"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-18T10:33:26.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"缓存"}],["meta",{"property":"article:tag","content":"Cache"}],["meta",{"property":"article:modified_time","content":"2023-12-18T10:33:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关于缓存一致性的问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-18T10:33:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"缓存更新策略","slug":"缓存更新策略","link":"#缓存更新策略","children":[]},{"level":3,"title":"操作类型","slug":"操作类型","link":"#操作类型","children":[]},{"level":3,"title":"为什么要删除缓存而不是更新缓存？","slug":"为什么要删除缓存而不是更新缓存","link":"#为什么要删除缓存而不是更新缓存","children":[]},{"level":3,"title":"先更新数据库，再删除缓存，一个操作成功，一个操作失败怎么办？","slug":"先更新数据库-再删除缓存-一个操作成功-一个操作失败怎么办","link":"#先更新数据库-再删除缓存-一个操作成功-一个操作失败怎么办","children":[]}],"git":{"createdTime":1702895606000,"updatedTime":1702895606000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":2.18,"words":653},"filePathRelative":"01_Project/Interview/缓存/关于缓存一致性的问题.md","localizedDate":"2023年12月18日","excerpt":"<blockquote>\\n<p>缓存一致性问题往往发生在 <code>MySQL</code> 和 <code>Redis</code> 中<br>\\n在数据变更过程中，因为并发、系统故障等问题导致数据、缓存更新不一致</p>\\n</blockquote>\\n<p>对于缓存的更新，目前主要有两种策略</p>\\n<h3> 缓存更新策略</h3>\\n<h4> 超时剔除策略</h4>\\n<blockquote>\\n<p>适用于低一致性需求，很少发生变更的数据</p>\\n</blockquote>\\n<p>比方说将数据存在 <code>Redis</code> 中，并设置 <code>ttl</code><br>\\n读请求到来时发现数据过期后，重新去 <code>MySQL</code> 中查询并塞入缓存</p>","autoDesc":true}');export{e as data};
