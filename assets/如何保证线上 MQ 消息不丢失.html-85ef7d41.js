const t=JSON.parse('{"key":"v-50af7f7c","path":"/staged/SeniorDevelopment/RocketMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E4%B8%8A%20MQ%20%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1.html","title":"如何保证线上 MQ 消息不丢失","lang":"zh-CN","frontmatter":{"title":"如何保证线上 MQ 消息不丢失","index":false,"date":"2023-02-24T00:00:00.000Z","tag":["MQ"],"description":"消息发送方式 同步发送 生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束 异步发送 先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知 OneWay 发送（单向） 只负责发送请求，不需要关注结果 适用于 log 之类的消息，丢几条也没有关系 如果要保证消息不丢失，那就尽量不要选择这种方式 什么时候会导致消息丢失","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/staged/SeniorDevelopment/RocketMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E4%B8%8A%20MQ%20%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1.html"}],["meta",{"property":"og:title","content":"如何保证线上 MQ 消息不丢失"}],["meta",{"property":"og:description","content":"消息发送方式 同步发送 生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束 异步发送 先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知 OneWay 发送（单向） 只负责发送请求，不需要关注结果 适用于 log 之类的消息，丢几条也没有关系 如果要保证消息不丢失，那就尽量不要选择这种方式 什么时候会导致消息丢失"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-06T15:15:38.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:published_time","content":"2023-02-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T15:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何保证线上 MQ 消息不丢失\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-06T15:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"消息发送方式","slug":"消息发送方式","link":"#消息发送方式","children":[]},{"level":3,"title":"什么时候会导致消息丢失","slug":"什么时候会导致消息丢失","link":"#什么时候会导致消息丢失","children":[]}],"git":{"createdTime":1699283738000,"updatedTime":1699283738000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":0.87,"words":261},"filePathRelative":"staged/SeniorDevelopment/RocketMQ/如何保证线上 MQ 消息不丢失.md","localizedDate":"2023年2月24日","excerpt":"<h3> 消息发送方式</h3>\\n<ul>\\n<li>同步发送</li>\\n</ul>\\n<p>生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束</p>\\n<ul>\\n<li>异步发送</li>\\n</ul>\\n<p>先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知</p>\\n<ul>\\n<li>OneWay 发送（单向）</li>\\n</ul>\\n<p>只负责发送请求，不需要关注结果</p>\\n<p>适用于 log 之类的消息，丢几条也没有关系</p>\\n<p>如果要保证消息不丢失，那就尽量不要选择这种方式</p>\\n<h3> 什么时候会导致消息丢失</h3>","autoDesc":true}');export{t as data};
