const t=JSON.parse('{"key":"v-8aed51ac","path":"/00_Inbox/%E5%B9%82%E7%AD%89%E6%93%8D%E4%BD%9C%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0.html","title":"幂等操作如何实现","lang":"zh-CN","frontmatter":{"title":"幂等操作如何实现","tag":[],"description":"幂等操作如何实现 幂等操作大致可以分为两种，一种是客户端幂等操作，一种是服务端幂等操作 区别就在于是哪一方发起的请求 如果是客户端发起的请求，那就是客户端幂等 如果是服务器间发起的请求，就是服务器端幂等（例如服务 A 调用服务 B，B 是否需要支持幂等呢？） 客户端幂等操作 重复提交表单，比如 重复下订单 消耗金币、钻石、抽奖券进行抽奖时，连续点击导致的并发，这个是否需要进行幂等 解决方案： 增加一步向后台申请 token 的操作 客户端在提交表单时需要携带这个 token 服务器根据这个 token 做如下判断（token 在使用后存在 Redis 中） token 存在：已经使用过，拒绝请求直接返回 token 不存在：请求第一次进来，进行后续业务操作 （或者说根据表单里面的一些数据，组合成唯一的键，来确定是否已入库进而实现幂等）","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/00_Inbox/%E5%B9%82%E7%AD%89%E6%93%8D%E4%BD%9C%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:title","content":"幂等操作如何实现"}],["meta",{"property":"og:description","content":"幂等操作如何实现 幂等操作大致可以分为两种，一种是客户端幂等操作，一种是服务端幂等操作 区别就在于是哪一方发起的请求 如果是客户端发起的请求，那就是客户端幂等 如果是服务器间发起的请求，就是服务器端幂等（例如服务 A 调用服务 B，B 是否需要支持幂等呢？） 客户端幂等操作 重复提交表单，比如 重复下订单 消耗金币、钻石、抽奖券进行抽奖时，连续点击导致的并发，这个是否需要进行幂等 解决方案： 增加一步向后台申请 token 的操作 客户端在提交表单时需要携带这个 token 服务器根据这个 token 做如下判断（token 在使用后存在 Redis 中） token 存在：已经使用过，拒绝请求直接返回 token 不存在：请求第一次进来，进行后续业务操作 （或者说根据表单里面的一些数据，组合成唯一的键，来确定是否已入库进而实现幂等）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-13T15:42:12.000Z"}],["meta",{"property":"article:author","content":"logycoconut"}],["meta",{"property":"article:modified_time","content":"2024-09-13T15:42:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"幂等操作如何实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-13T15:42:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://github.com/logycoconut\\"}]}"]]},"headers":[{"level":3,"title":"客户端幂等操作","slug":"客户端幂等操作","link":"#客户端幂等操作","children":[]},{"level":3,"title":"服务器端幂等操作","slug":"服务器端幂等操作","link":"#服务器端幂等操作","children":[]},{"level":2,"title":"幂等的类型","slug":"幂等的类型","link":"#幂等的类型","children":[]}],"git":{"createdTime":1726242132000,"updatedTime":1726242132000,"contributors":[{"name":"logycoconut","email":"logycoconut@foxmail.com","commits":1}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"00_Inbox/幂等操作如何实现.md","localizedDate":"2024年9月13日","excerpt":"<h1> 幂等操作如何实现</h1>\\n<p>幂等操作大致可以分为两种，一种是客户端幂等操作，一种是服务端幂等操作<br>\\n区别就在于是哪一方发起的请求<br>\\n如果是客户端发起的请求，那就是客户端幂等<br>\\n如果是服务器间发起的请求，就是服务器端幂等（例如服务 A 调用服务 B，B 是否需要支持幂等呢？）</p>\\n<h3> 客户端幂等操作</h3>\\n<p>重复提交表单，比如</p>\\n<ul>\\n<li>重复下订单</li>\\n<li>消耗金币、钻石、抽奖券进行抽奖时，连续点击导致的并发，这个是否需要进行幂等</li>\\n</ul>\\n<p><strong>解决方案：</strong></p>\\n<ul>\\n<li>增加一步向后台申请 token 的操作</li>\\n<li>客户端在提交表单时需要携带这个 token</li>\\n<li>服务器根据这个 token 做如下判断（token 在使用后存在 Redis 中）\\n<ul>\\n<li>token 存在：已经使用过，拒绝请求直接返回</li>\\n<li>token 不存在：请求第一次进来，进行后续业务操作<br>\\n（或者说根据表单里面的一些数据，组合成唯一的键，来确定是否已入库进而实现幂等）</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
