import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as l,f as r}from"./app-0845c340.js";const a={},t=r('<h1 id="幂等操作如何实现" tabindex="-1"><a class="header-anchor" href="#幂等操作如何实现" aria-hidden="true">#</a> 幂等操作如何实现</h1><p>幂等操作大致可以分为两种，一种是客户端幂等操作，一种是服务端幂等操作<br> 区别就在于是哪一方发起的请求<br> 如果是客户端发起的请求，那就是客户端幂等<br> 如果是服务器间发起的请求，就是服务器端幂等（例如服务 A 调用服务 B，B 是否需要支持幂等呢？）</p><h3 id="客户端幂等操作" tabindex="-1"><a class="header-anchor" href="#客户端幂等操作" aria-hidden="true">#</a> 客户端幂等操作</h3><p>重复提交表单，比如</p><ul><li>重复下订单</li><li>消耗金币、钻石、抽奖券进行抽奖时，连续点击导致的并发，这个是否需要进行幂等</li></ul><p><strong>解决方案：</strong></p><ul><li>增加一步向后台申请 token 的操作</li><li>客户端在提交表单时需要携带这个 token</li><li>服务器根据这个 token 做如下判断（token 在使用后存在 Redis 中） <ul><li>token 存在：已经使用过，拒绝请求直接返回</li><li>token 不存在：请求第一次进来，进行后续业务操作<br> （或者说根据表单里面的一些数据，组合成唯一的键，来确定是否已入库进而实现幂等）</li></ul></li></ul><h3 id="服务器端幂等操作" tabindex="-1"><a class="header-anchor" href="#服务器端幂等操作" aria-hidden="true">#</a> 服务器端幂等操作</h3><ul><li>消息重复消费</li><li>扣减库存</li><li>短信通知</li></ul><p>以扣减库存为例<br> 扣减库存时，需要几个重要参数，<em>订单 ID、SKU、扣减数量</em></p><p>一个订单只能进行一次库存扣减，如果在库存扣减记录表中已经存在了相关的扣减记录，那就拒绝请求，直接返回，若没有才进行后续的业务操作</p><h2 id="幂等的类型" tabindex="-1"><a class="header-anchor" href="#幂等的类型" aria-hidden="true">#</a> 幂等的类型</h2><ul><li>弱幂等<br> cache 内判断<br> 如短信发送</li><li>强幂等<br> 数据库内判断<br> 像金额扣减、库存扣减</li></ul>',13),n=[t];function h(o,d){return i(),l("div",null,n)}const _=e(a,[["render",h],["__file","幂等操作如何实现.html.vue"]]);export{_ as default};
