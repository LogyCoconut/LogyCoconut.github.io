import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as t,a as _}from"./app-87672d21.js";const c={},n=_("p",null,"数据库建表时，对于一些可填可不填的字段，我们应该尽量把它设置为 NOT NULL。这种做法即可以提高性能，又可以在很大程度上避免空指针类的问题，好处颇多。 1.节省空间 NULL 列需要更多的存储空间：需要一个额外字节作为判断是否为 NULL 的标志位。 2.空指针 查询时，可以在一定程度上减少 NullPointerException。 3.减少因为空值而出现的计算错误 如果有 Null column 存在的情况下，count(NULL column) 需要格外注意，NULL 值不会参与统计。 4.索引 含有空值的列很难进行查询优化，而且对表索引时不会存储 NULL 值的。所以如果索引的字段可以为 NULL值，索引的效率会下降。因为它们使得索引、索引的统计信息以及比较运算更加复杂。 可以用0、一个特殊的值或者一个空串代替 NULL值。 5.使用 != ，NOT IN 的情况 NOT IN 、!= 等负向条件查询在有 NULL 值的情况下，返回永远为空结果，查询容易出错。",-1),L=[n];function l(N,r){return o(),t("div",null,L)}const u=e(c,[["render",l],["__file","数据库攻略.html.vue"]]);export{u as default};
